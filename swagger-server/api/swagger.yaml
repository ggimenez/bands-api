---
swagger: "2.0"
info:
  description: "Musical Bands Rest API"
  version: "2.0.0"
  title: "Bands API"
host: "api.uber.com"
basePath: "/v1"
schemes:
- "https"
produces:
- "application/json"
paths:
  /band:
    get:
      tags:
      - "Bands"
      summary: "Get all bands"
      description: "Get all bands.\n"
      operationId: "bandGET"
      parameters: []
      responses:
        200:
          description: "An array of Bands"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Band"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Bands"
  /band/{name}:
    get:
      tags:
      - "Bands"
      summary: "Get one band."
      description: "Get one band.\n"
      operationId: "bandNameGET"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the band, PK."
        required: true
        type: "string"
      responses:
        200:
          description: "Band"
          schema:
            $ref: "#/definitions/Band"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Bands"
  /band/count:
    get:
      tags:
      - "Bands"
      summary: "Count the number of bands"
      description: "Count the number of bands\n"
      operationId: "bandCountGET"
      parameters: []
      responses:
        200:
          description: "A number, the number of bands"
          schema:
            type: "number"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Bands"
  /band/exists/{name}:
    get:
      tags:
      - "Bands"
      summary: "Validate the existence or not of a band"
      description: "Validate the existence or not of a band."
      operationId: "bandExistsNameGET"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the band, PK."
        required: true
        type: "string"
      responses:
        200:
          description: "True if Band exists."
          schema:
            type: "boolean"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Bands"
  /band/update/{name}:
    put:
      tags:
      - "Bands"
      summary: "Update a Band"
      description: "Update a Band"
      operationId: "bandUpdateNamePUT"
      consumes:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the band, PK."
        required: true
        type: "string"
      - in: "body"
        name: "band"
        description: "fields to update of the band."
        required: true
        schema:
          $ref: "#/definitions/band"
      responses:
        201:
          description: "Created."
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Bands"
  /band/create:
    post:
      tags:
      - "Bands"
      summary: "Create a new a Band"
      description: "Create a Band"
      operationId: "bandCreatePOST"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "band"
        description: "fields to update of the band."
        required: true
        schema:
          $ref: "#/definitions/band_1"
      responses:
        201:
          description: "Created."
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Bands"
  /band/delete/{name}:
    delete:
      tags:
      - "Bands"
      summary: "Delete a Band"
      description: "Delete a Band"
      operationId: "bandDeleteNameDELETE"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the band, PK."
        required: true
        type: "string"
      responses:
        201:
          description: "Created."
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Bands"
definitions:
  Band:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Name of the Band, such as Oasis"
      gender:
        type: "string"
        description: "Musical Gender, such as Britpop."
      manager:
        type: "string"
        description: "Manager of the band, such as Sharon Osbourne."
      description:
        type: "string"
        description: "Description of the band."
  Error:
    type: "object"
    properties:
      errorCode:
        type: "integer"
      message:
        type: "string"
  band:
    type: "object"
    properties:
      gender:
        type: "string"
      manager:
        type: "string"
      description:
        type: "string"
  band_1:
    type: "object"
    properties:
      name:
        type: "string"
      gender:
        type: "string"
      manager:
        type: "string"
      description:
        type: "string"
